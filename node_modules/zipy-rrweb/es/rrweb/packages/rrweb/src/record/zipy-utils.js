function getEventPath(event) {
    try {
        if ('composedPath' in event) {
            const path = event.composedPath();
            if (path.length) {
                return path;
            }
        }
        else if ('path' in event && event.path.length) {
            return event.path;
        }
        return null;
    }
    catch (_a) {
        return null;
    }
}
function generateNodePath(path) {
    if (!path || !Array.isArray(path)) {
        return '';
    }
    let nodePath = '';
    for (let i = path.length > 3 ? 3 : path.length - 1; i >= 0; i--) {
        let intermediateNodePath = '';
        let aPath = path[i];
        if (aPath && aPath.tagName && aPath.attributes && aPath.attributes.length) {
            if (i > 0)
                intermediateNodePath = aPath.tagName.toLowerCase() + getNodeAttributeValues(aPath.attributes) + ' > ';
            else
                intermediateNodePath = aPath.tagName.toLowerCase() + getNodeAttributeValues(aPath.attributes);
            nodePath = nodePath + intermediateNodePath;
        }
    }
    return nodePath;
}
function getNodeAttributeValues(attrObj) {
    let attributeValue = '';
    if (!attrObj || (attrObj && !attrObj.length)) {
        return attributeValue;
    }
    Object.values(attrObj).forEach((attr) => {
        if (attr && attr.nodeName) {
            let key = attr.nodeName;
            let value = attr.nodeValue;
            if (key == 'class') {
                attributeValue = attributeValue + '.' + value;
            }
            else if (key == 'id') {
                attributeValue = attributeValue + '#' + value;
            }
            else if (key == 'type') {
                attributeValue = attributeValue + `[${key}="${value}"]`;
            }
        }
    });
    return attributeValue;
}
function getNodePathFromEvent(event) {
    const eventPath = getEventPath(event);
    return eventPath ? generateNodePath(eventPath) : '';
}

export { getNodePathFromEvent };
