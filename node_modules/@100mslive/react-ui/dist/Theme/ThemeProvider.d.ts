import React from 'react';
import type { Theme } from './stitches.config';
export declare enum ThemeTypes {
    light = "light",
    dark = "dark"
}
export declare type ThemeContextValue = {
    themeType: ThemeTypes;
    theme: Theme;
    aspectRatio: {
        width: number;
        height: number;
    };
    /**
     * @param {ThemeTypes} themeToUpdateTo - optional
     * Use this to toggle or update the currentTheme.
     * if a param is passed, it will set the theme to passed value, otherwise will toggle between light and dark
     * depending on current applied theme
     */
    toggleTheme: (themeToUpdateTo?: ThemeTypes) => void;
};
export declare type ThemeProviderProps = {
    themeType?: ThemeTypes;
    theme?: Theme;
    aspectRatio?: {
        width: number;
        height: number;
    };
};
export declare const ThemeContext: React.Context<{
    themeType: ThemeTypes;
    theme: string & {
        className: string;
        selector: string;
    } & {
        colors: {
            bgPrimary: import("@stitches/react/types/theme").Token<"bgPrimary", string, "colors", "hms-ui">;
            bgSecondary: import("@stitches/react/types/theme").Token<"bgSecondary", string, "colors", "hms-ui">;
            bgTertiary: import("@stitches/react/types/theme").Token<"bgTertiary", string, "colors", "hms-ui">;
            surfaceLight: import("@stitches/react/types/theme").Token<"surfaceLight", string, "colors", "hms-ui">;
            surfaceLighter: import("@stitches/react/types/theme").Token<"surfaceLighter", string, "colors", "hms-ui">;
            textPrimary: import("@stitches/react/types/theme").Token<"textPrimary", string, "colors", "hms-ui">;
            textSecondary: import("@stitches/react/types/theme").Token<"textSecondary", string, "colors", "hms-ui">;
            textDisabled: import("@stitches/react/types/theme").Token<"textDisabled", string, "colors", "hms-ui">;
            textInvert: import("@stitches/react/types/theme").Token<"textInvert", string, "colors", "hms-ui">;
            textHighEmp: import("@stitches/react/types/theme").Token<"textHighEmp", string, "colors", "hms-ui">;
            textMedEmp: import("@stitches/react/types/theme").Token<"textMedEmp", string, "colors", "hms-ui">;
            iconBtn: import("@stitches/react/types/theme").Token<"iconBtn", string, "colors", "hms-ui">;
            iconHoverBg: import("@stitches/react/types/theme").Token<"iconHoverBg", string, "colors", "hms-ui">;
            transparentBg: import("@stitches/react/types/theme").Token<"transparentBg", string, "colors", "hms-ui">;
            mainBg: import("@stitches/react/types/theme").Token<"mainBg", string, "colors", "hms-ui">;
            tileBg: import("@stitches/react/types/theme").Token<"tileBg", string, "colors", "hms-ui">;
            secondaryDisabled: import("@stitches/react/types/theme").Token<"secondaryDisabled", string, "colors", "hms-ui">;
            previewBg: import("@stitches/react/types/theme").Token<"previewBg", string, "colors", "hms-ui">;
            statsBg: import("@stitches/react/types/theme").Token<"statsBg", string, "colors", "hms-ui">;
            menuBg: import("@stitches/react/types/theme").Token<"menuBg", string, "colors", "hms-ui">;
            inputBg: import("@stitches/react/types/theme").Token<"inputBg", string, "colors", "hms-ui">;
            toastBg: import("@stitches/react/types/theme").Token<"toastBg", string, "colors", "hms-ui">;
            borderDefault: import("@stitches/react/types/theme").Token<"borderDefault", string, "colors", "hms-ui">;
            backgroundDefault: import("@stitches/react/types/theme").Token<"backgroundDefault", string, "colors", "hms-ui">;
            borderLighter: import("@stitches/react/types/theme").Token<"borderLighter", string, "colors", "hms-ui">;
            white: import("@stitches/react/types/theme").Token<"white", string, "colors", "hms-ui">;
            black: import("@stitches/react/types/theme").Token<"black", string, "colors", "hms-ui">;
            transparent: import("@stitches/react/types/theme").Token<"transparent", string, "colors", "hms-ui">;
            orange: import("@stitches/react/types/theme").Token<"orange", string, "colors", "hms-ui">;
            cyan: import("@stitches/react/types/theme").Token<"cyan", string, "colors", "hms-ui">;
            tamarind: import("@stitches/react/types/theme").Token<"tamarind", string, "colors", "hms-ui">;
            yellow: import("@stitches/react/types/theme").Token<"yellow", string, "colors", "hms-ui">;
            twinYellow: import("@stitches/react/types/theme").Token<"twinYellow", string, "colors", "hms-ui">;
            green: import("@stitches/react/types/theme").Token<"green", string, "colors", "hms-ui">;
            darkgreen: import("@stitches/react/types/theme").Token<"darkgreen", string, "colors", "hms-ui">;
            purple: import("@stitches/react/types/theme").Token<"purple", string, "colors", "hms-ui">;
            borderLight: import("@stitches/react/types/theme").Token<"borderLight", string, "colors", "hms-ui">;
            borderAccent: import("@stitches/react/types/theme").Token<"borderAccent", string, "colors", "hms-ui">;
            success: import("@stitches/react/types/theme").Token<"success", string, "colors", "hms-ui">;
            error: import("@stitches/react/types/theme").Token<"error", string, "colors", "hms-ui">;
            errorTint: import("@stitches/react/types/theme").Token<"errorTint", string, "colors", "hms-ui">;
            warning: import("@stitches/react/types/theme").Token<"warning", string, "colors", "hms-ui">;
            brandLight: import("@stitches/react/types/theme").Token<"brandLight", string, "colors", "hms-ui">;
            brandDefault: import("@stitches/react/types/theme").Token<"brandDefault", string, "colors", "hms-ui">;
            brandDark: import("@stitches/react/types/theme").Token<"brandDark", string, "colors", "hms-ui">;
            brandDisabled: import("@stitches/react/types/theme").Token<"brandDisabled", string, "colors", "hms-ui">;
            grayLight: import("@stitches/react/types/theme").Token<"grayLight", string, "colors", "hms-ui">;
            grayDefault: import("@stitches/react/types/theme").Token<"grayDefault", string, "colors", "hms-ui">;
            grayDark: import("@stitches/react/types/theme").Token<"grayDark", string, "colors", "hms-ui">;
            secondaryGray: import("@stitches/react/types/theme").Token<"secondaryGray", string, "colors", "hms-ui">;
            grayDisabled: import("@stitches/react/types/theme").Token<"grayDisabled", string, "colors", "hms-ui">;
            textAccentHigh: import("@stitches/react/types/theme").Token<"textAccentHigh", string, "colors", "hms-ui">;
            textAccentMedium: import("@stitches/react/types/theme").Token<"textAccentMedium", string, "colors", "hms-ui">;
            textAccentDisabled: import("@stitches/react/types/theme").Token<"textAccentDisabled", string, "colors", "hms-ui">;
            surfaceDefault: import("@stitches/react/types/theme").Token<"surfaceDefault", string, "colors", "hms-ui">;
            surfaceDark: import("@stitches/react/types/theme").Token<"surfaceDark", string, "colors", "hms-ui">;
            backgroundDark: import("@stitches/react/types/theme").Token<"backgroundDark", string, "colors", "hms-ui">;
            backgroundDarker: import("@stitches/react/types/theme").Token<"backgroundDarker", string, "colors", "hms-ui">;
            primaryLight: import("@stitches/react/types/theme").Token<"primaryLight", string, "colors", "hms-ui">;
            primaryDefault: import("@stitches/react/types/theme").Token<"primaryDefault", string, "colors", "hms-ui">;
            primaryDark: import("@stitches/react/types/theme").Token<"primaryDark", string, "colors", "hms-ui">;
            primaryDisabled: import("@stitches/react/types/theme").Token<"primaryDisabled", string, "colors", "hms-ui">;
            secondaryLight: import("@stitches/react/types/theme").Token<"secondaryLight", string, "colors", "hms-ui">;
            secondaryDefault: import("@stitches/react/types/theme").Token<"secondaryDefault", string, "colors", "hms-ui">;
            secondaryDark: import("@stitches/react/types/theme").Token<"secondaryDark", string, "colors", "hms-ui">;
            errorDefault: import("@stitches/react/types/theme").Token<"errorDefault", string, "colors", "hms-ui">;
            errorLight: import("@stitches/react/types/theme").Token<"errorLight", string, "colors", "hms-ui">;
            errorDark: import("@stitches/react/types/theme").Token<"errorDark", string, "colors", "hms-ui">;
            errorDisabled: import("@stitches/react/types/theme").Token<"errorDisabled", string, "colors", "hms-ui">;
        };
        shadows: {
            sm: import("@stitches/react/types/theme").Token<"sm", string, "shadows", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "shadows", "hms-ui">;
        };
        fonts: {
            sans: import("@stitches/react/types/theme").Token<"sans", string, "fonts", "hms-ui">;
        };
        fontSizes: {
            h1: import("@stitches/react/types/theme").Token<"h1", string, "fontSizes", "hms-ui">;
            h2: import("@stitches/react/types/theme").Token<"h2", string, "fontSizes", "hms-ui">;
            h3: import("@stitches/react/types/theme").Token<"h3", string, "fontSizes", "hms-ui">;
            h4: import("@stitches/react/types/theme").Token<"h4", string, "fontSizes", "hms-ui">;
            h5: import("@stitches/react/types/theme").Token<"h5", string, "fontSizes", "hms-ui">;
            h6: import("@stitches/react/types/theme").Token<"h6", string, "fontSizes", "hms-ui">;
            tiny: import("@stitches/react/types/theme").Token<"tiny", string, "fontSizes", "hms-ui">;
            xs: import("@stitches/react/types/theme").Token<"xs", string, "fontSizes", "hms-ui">;
            sm: import("@stitches/react/types/theme").Token<"sm", string, "fontSizes", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "fontSizes", "hms-ui">;
            lg: import("@stitches/react/types/theme").Token<"lg", string, "fontSizes", "hms-ui">;
        };
        fontWeights: {
            semiBold: import("@stitches/react/types/theme").Token<"semiBold", string, "fontWeights", "hms-ui">;
            medium: import("@stitches/react/types/theme").Token<"medium", string, "fontWeights", "hms-ui">;
            regular: import("@stitches/react/types/theme").Token<"regular", string, "fontWeights", "hms-ui">;
        };
        lineHeights: {
            h1: import("@stitches/react/types/theme").Token<"h1", string, "lineHeights", "hms-ui">;
            h2: import("@stitches/react/types/theme").Token<"h2", string, "lineHeights", "hms-ui">;
            h3: import("@stitches/react/types/theme").Token<"h3", string, "lineHeights", "hms-ui">;
            h4: import("@stitches/react/types/theme").Token<"h4", string, "lineHeights", "hms-ui">;
            h5: import("@stitches/react/types/theme").Token<"h5", string, "lineHeights", "hms-ui">;
            h6: import("@stitches/react/types/theme").Token<"h6", string, "lineHeights", "hms-ui">;
            tiny: import("@stitches/react/types/theme").Token<"tiny", string, "lineHeights", "hms-ui">;
            xs: import("@stitches/react/types/theme").Token<"xs", string, "lineHeights", "hms-ui">;
            sm: import("@stitches/react/types/theme").Token<"sm", string, "lineHeights", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "lineHeights", "hms-ui">;
        };
        radii: {
            0: import("@stitches/react/types/theme").Token<"0", string, "radii", "hms-ui">;
            1: import("@stitches/react/types/theme").Token<"1", string, "radii", "hms-ui">;
            2: import("@stitches/react/types/theme").Token<"2", string, "radii", "hms-ui">;
            3: import("@stitches/react/types/theme").Token<"3", string, "radii", "hms-ui">;
            4: import("@stitches/react/types/theme").Token<"4", string, "radii", "hms-ui">;
            round: import("@stitches/react/types/theme").Token<"round", string, "radii", "hms-ui">;
        };
        space: {
            0: import("@stitches/react/types/theme").Token<"0", string, "space", "hms-ui">;
            xs: import("@stitches/react/types/theme").Token<"xs", string, "space", "hms-ui">;
            sm: import("@stitches/react/types/theme").Token<"sm", string, "space", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "space", "hms-ui">;
            lg: import("@stitches/react/types/theme").Token<"lg", string, "space", "hms-ui">;
            xl: import("@stitches/react/types/theme").Token<"xl", string, "space", "hms-ui">;
            px: import("@stitches/react/types/theme").Token<"px", string, "space", "hms-ui">;
            1: import("@stitches/react/types/theme").Token<"1", string, "space", "hms-ui">;
            2: import("@stitches/react/types/theme").Token<"2", string, "space", "hms-ui">;
            3: import("@stitches/react/types/theme").Token<"3", string, "space", "hms-ui">;
            4: import("@stitches/react/types/theme").Token<"4", string, "space", "hms-ui">;
            5: import("@stitches/react/types/theme").Token<"5", string, "space", "hms-ui">;
            6: import("@stitches/react/types/theme").Token<"6", string, "space", "hms-ui">;
            7: import("@stitches/react/types/theme").Token<"7", string, "space", "hms-ui">;
            8: import("@stitches/react/types/theme").Token<"8", string, "space", "hms-ui">;
            9: import("@stitches/react/types/theme").Token<"9", string, "space", "hms-ui">;
            10: import("@stitches/react/types/theme").Token<"10", string, "space", "hms-ui">;
            11: import("@stitches/react/types/theme").Token<"11", string, "space", "hms-ui">;
            12: import("@stitches/react/types/theme").Token<"12", string, "space", "hms-ui">;
            13: import("@stitches/react/types/theme").Token<"13", string, "space", "hms-ui">;
            14: import("@stitches/react/types/theme").Token<"14", string, "space", "hms-ui">;
            15: import("@stitches/react/types/theme").Token<"15", string, "space", "hms-ui">;
            16: import("@stitches/react/types/theme").Token<"16", string, "space", "hms-ui">;
            17: import("@stitches/react/types/theme").Token<"17", string, "space", "hms-ui">;
            18: import("@stitches/react/types/theme").Token<"18", string, "space", "hms-ui">;
            19: import("@stitches/react/types/theme").Token<"19", string, "space", "hms-ui">;
            20: import("@stitches/react/types/theme").Token<"20", string, "space", "hms-ui">;
            24: import("@stitches/react/types/theme").Token<"24", string, "space", "hms-ui">;
            28: import("@stitches/react/types/theme").Token<"28", string, "space", "hms-ui">;
            32: import("@stitches/react/types/theme").Token<"32", string, "space", "hms-ui">;
            36: import("@stitches/react/types/theme").Token<"36", string, "space", "hms-ui">;
            40: import("@stitches/react/types/theme").Token<"40", string, "space", "hms-ui">;
            44: import("@stitches/react/types/theme").Token<"44", string, "space", "hms-ui">;
            48: import("@stitches/react/types/theme").Token<"48", string, "space", "hms-ui">;
            52: import("@stitches/react/types/theme").Token<"52", string, "space", "hms-ui">;
            56: import("@stitches/react/types/theme").Token<"56", string, "space", "hms-ui">;
            60: import("@stitches/react/types/theme").Token<"60", string, "space", "hms-ui">;
            64: import("@stitches/react/types/theme").Token<"64", string, "space", "hms-ui">;
            72: import("@stitches/react/types/theme").Token<"72", string, "space", "hms-ui">;
            80: import("@stitches/react/types/theme").Token<"80", string, "space", "hms-ui">;
            96: import("@stitches/react/types/theme").Token<"96", string, "space", "hms-ui">;
            100: import("@stitches/react/types/theme").Token<"100", string, "space", "hms-ui">;
        };
        borderWidths: {
            light: import("@stitches/react/types/theme").Token<"light", string, "borderWidths", "hms-ui">;
            normal: import("@stitches/react/types/theme").Token<"normal", string, "borderWidths", "hms-ui">;
            bold: import("@stitches/react/types/theme").Token<"bold", string, "borderWidths", "hms-ui">;
            extrabold: import("@stitches/react/types/theme").Token<"extrabold", string, "borderWidths", "hms-ui">;
            black: import("@stitches/react/types/theme").Token<"black", string, "borderWidths", "hms-ui">;
        };
    };
    aspectRatio: {
        width: number;
        height: number;
    };
    toggleTheme: (_themeToUpdateTo?: ThemeTypes) => void;
}>;
/**
 * Wrap this around your root component to get access to theme
 * eg:
 * <ThemeProvider type="dark" appBuilder={{ aspectRatio: { width:1, height: 1} }}>
 *  <App />
 * </ThemeProvider>
 */
export declare const HMSThemeProvider: React.FC<React.PropsWithChildren<ThemeProviderProps>>;
export declare const useTheme: () => {
    themeType: ThemeTypes;
    theme: string & {
        className: string;
        selector: string;
    } & {
        colors: {
            bgPrimary: import("@stitches/react/types/theme").Token<"bgPrimary", string, "colors", "hms-ui">;
            bgSecondary: import("@stitches/react/types/theme").Token<"bgSecondary", string, "colors", "hms-ui">;
            bgTertiary: import("@stitches/react/types/theme").Token<"bgTertiary", string, "colors", "hms-ui">;
            surfaceLight: import("@stitches/react/types/theme").Token<"surfaceLight", string, "colors", "hms-ui">;
            surfaceLighter: import("@stitches/react/types/theme").Token<"surfaceLighter", string, "colors", "hms-ui">;
            textPrimary: import("@stitches/react/types/theme").Token<"textPrimary", string, "colors", "hms-ui">;
            textSecondary: import("@stitches/react/types/theme").Token<"textSecondary", string, "colors", "hms-ui">;
            textDisabled: import("@stitches/react/types/theme").Token<"textDisabled", string, "colors", "hms-ui">;
            textInvert: import("@stitches/react/types/theme").Token<"textInvert", string, "colors", "hms-ui">;
            textHighEmp: import("@stitches/react/types/theme").Token<"textHighEmp", string, "colors", "hms-ui">;
            textMedEmp: import("@stitches/react/types/theme").Token<"textMedEmp", string, "colors", "hms-ui">;
            iconBtn: import("@stitches/react/types/theme").Token<"iconBtn", string, "colors", "hms-ui">;
            iconHoverBg: import("@stitches/react/types/theme").Token<"iconHoverBg", string, "colors", "hms-ui">;
            transparentBg: import("@stitches/react/types/theme").Token<"transparentBg", string, "colors", "hms-ui">;
            mainBg: import("@stitches/react/types/theme").Token<"mainBg", string, "colors", "hms-ui">;
            tileBg: import("@stitches/react/types/theme").Token<"tileBg", string, "colors", "hms-ui">;
            secondaryDisabled: import("@stitches/react/types/theme").Token<"secondaryDisabled", string, "colors", "hms-ui">;
            previewBg: import("@stitches/react/types/theme").Token<"previewBg", string, "colors", "hms-ui">;
            statsBg: import("@stitches/react/types/theme").Token<"statsBg", string, "colors", "hms-ui">;
            menuBg: import("@stitches/react/types/theme").Token<"menuBg", string, "colors", "hms-ui">;
            inputBg: import("@stitches/react/types/theme").Token<"inputBg", string, "colors", "hms-ui">;
            toastBg: import("@stitches/react/types/theme").Token<"toastBg", string, "colors", "hms-ui">;
            borderDefault: import("@stitches/react/types/theme").Token<"borderDefault", string, "colors", "hms-ui">;
            backgroundDefault: import("@stitches/react/types/theme").Token<"backgroundDefault", string, "colors", "hms-ui">;
            borderLighter: import("@stitches/react/types/theme").Token<"borderLighter", string, "colors", "hms-ui">;
            white: import("@stitches/react/types/theme").Token<"white", string, "colors", "hms-ui">;
            black: import("@stitches/react/types/theme").Token<"black", string, "colors", "hms-ui">;
            transparent: import("@stitches/react/types/theme").Token<"transparent", string, "colors", "hms-ui">;
            orange: import("@stitches/react/types/theme").Token<"orange", string, "colors", "hms-ui">;
            cyan: import("@stitches/react/types/theme").Token<"cyan", string, "colors", "hms-ui">;
            tamarind: import("@stitches/react/types/theme").Token<"tamarind", string, "colors", "hms-ui">;
            yellow: import("@stitches/react/types/theme").Token<"yellow", string, "colors", "hms-ui">;
            twinYellow: import("@stitches/react/types/theme").Token<"twinYellow", string, "colors", "hms-ui">;
            green: import("@stitches/react/types/theme").Token<"green", string, "colors", "hms-ui">;
            darkgreen: import("@stitches/react/types/theme").Token<"darkgreen", string, "colors", "hms-ui">;
            purple: import("@stitches/react/types/theme").Token<"purple", string, "colors", "hms-ui">;
            borderLight: import("@stitches/react/types/theme").Token<"borderLight", string, "colors", "hms-ui">;
            borderAccent: import("@stitches/react/types/theme").Token<"borderAccent", string, "colors", "hms-ui">;
            success: import("@stitches/react/types/theme").Token<"success", string, "colors", "hms-ui">;
            error: import("@stitches/react/types/theme").Token<"error", string, "colors", "hms-ui">;
            errorTint: import("@stitches/react/types/theme").Token<"errorTint", string, "colors", "hms-ui">;
            warning: import("@stitches/react/types/theme").Token<"warning", string, "colors", "hms-ui">;
            brandLight: import("@stitches/react/types/theme").Token<"brandLight", string, "colors", "hms-ui">;
            brandDefault: import("@stitches/react/types/theme").Token<"brandDefault", string, "colors", "hms-ui">;
            brandDark: import("@stitches/react/types/theme").Token<"brandDark", string, "colors", "hms-ui">;
            brandDisabled: import("@stitches/react/types/theme").Token<"brandDisabled", string, "colors", "hms-ui">;
            grayLight: import("@stitches/react/types/theme").Token<"grayLight", string, "colors", "hms-ui">;
            grayDefault: import("@stitches/react/types/theme").Token<"grayDefault", string, "colors", "hms-ui">;
            grayDark: import("@stitches/react/types/theme").Token<"grayDark", string, "colors", "hms-ui">;
            secondaryGray: import("@stitches/react/types/theme").Token<"secondaryGray", string, "colors", "hms-ui">;
            grayDisabled: import("@stitches/react/types/theme").Token<"grayDisabled", string, "colors", "hms-ui">;
            textAccentHigh: import("@stitches/react/types/theme").Token<"textAccentHigh", string, "colors", "hms-ui">;
            textAccentMedium: import("@stitches/react/types/theme").Token<"textAccentMedium", string, "colors", "hms-ui">;
            textAccentDisabled: import("@stitches/react/types/theme").Token<"textAccentDisabled", string, "colors", "hms-ui">;
            surfaceDefault: import("@stitches/react/types/theme").Token<"surfaceDefault", string, "colors", "hms-ui">;
            surfaceDark: import("@stitches/react/types/theme").Token<"surfaceDark", string, "colors", "hms-ui">;
            backgroundDark: import("@stitches/react/types/theme").Token<"backgroundDark", string, "colors", "hms-ui">;
            backgroundDarker: import("@stitches/react/types/theme").Token<"backgroundDarker", string, "colors", "hms-ui">;
            primaryLight: import("@stitches/react/types/theme").Token<"primaryLight", string, "colors", "hms-ui">;
            primaryDefault: import("@stitches/react/types/theme").Token<"primaryDefault", string, "colors", "hms-ui">;
            primaryDark: import("@stitches/react/types/theme").Token<"primaryDark", string, "colors", "hms-ui">;
            primaryDisabled: import("@stitches/react/types/theme").Token<"primaryDisabled", string, "colors", "hms-ui">;
            secondaryLight: import("@stitches/react/types/theme").Token<"secondaryLight", string, "colors", "hms-ui">;
            secondaryDefault: import("@stitches/react/types/theme").Token<"secondaryDefault", string, "colors", "hms-ui">;
            secondaryDark: import("@stitches/react/types/theme").Token<"secondaryDark", string, "colors", "hms-ui">;
            errorDefault: import("@stitches/react/types/theme").Token<"errorDefault", string, "colors", "hms-ui">;
            errorLight: import("@stitches/react/types/theme").Token<"errorLight", string, "colors", "hms-ui">;
            errorDark: import("@stitches/react/types/theme").Token<"errorDark", string, "colors", "hms-ui">;
            errorDisabled: import("@stitches/react/types/theme").Token<"errorDisabled", string, "colors", "hms-ui">;
        };
        shadows: {
            sm: import("@stitches/react/types/theme").Token<"sm", string, "shadows", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "shadows", "hms-ui">;
        };
        fonts: {
            sans: import("@stitches/react/types/theme").Token<"sans", string, "fonts", "hms-ui">;
        };
        fontSizes: {
            h1: import("@stitches/react/types/theme").Token<"h1", string, "fontSizes", "hms-ui">;
            h2: import("@stitches/react/types/theme").Token<"h2", string, "fontSizes", "hms-ui">;
            h3: import("@stitches/react/types/theme").Token<"h3", string, "fontSizes", "hms-ui">;
            h4: import("@stitches/react/types/theme").Token<"h4", string, "fontSizes", "hms-ui">;
            h5: import("@stitches/react/types/theme").Token<"h5", string, "fontSizes", "hms-ui">;
            h6: import("@stitches/react/types/theme").Token<"h6", string, "fontSizes", "hms-ui">;
            tiny: import("@stitches/react/types/theme").Token<"tiny", string, "fontSizes", "hms-ui">;
            xs: import("@stitches/react/types/theme").Token<"xs", string, "fontSizes", "hms-ui">;
            sm: import("@stitches/react/types/theme").Token<"sm", string, "fontSizes", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "fontSizes", "hms-ui">;
            lg: import("@stitches/react/types/theme").Token<"lg", string, "fontSizes", "hms-ui">;
        };
        fontWeights: {
            semiBold: import("@stitches/react/types/theme").Token<"semiBold", string, "fontWeights", "hms-ui">;
            medium: import("@stitches/react/types/theme").Token<"medium", string, "fontWeights", "hms-ui">;
            regular: import("@stitches/react/types/theme").Token<"regular", string, "fontWeights", "hms-ui">;
        };
        lineHeights: {
            h1: import("@stitches/react/types/theme").Token<"h1", string, "lineHeights", "hms-ui">;
            h2: import("@stitches/react/types/theme").Token<"h2", string, "lineHeights", "hms-ui">;
            h3: import("@stitches/react/types/theme").Token<"h3", string, "lineHeights", "hms-ui">;
            h4: import("@stitches/react/types/theme").Token<"h4", string, "lineHeights", "hms-ui">;
            h5: import("@stitches/react/types/theme").Token<"h5", string, "lineHeights", "hms-ui">;
            h6: import("@stitches/react/types/theme").Token<"h6", string, "lineHeights", "hms-ui">;
            tiny: import("@stitches/react/types/theme").Token<"tiny", string, "lineHeights", "hms-ui">;
            xs: import("@stitches/react/types/theme").Token<"xs", string, "lineHeights", "hms-ui">;
            sm: import("@stitches/react/types/theme").Token<"sm", string, "lineHeights", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "lineHeights", "hms-ui">;
        };
        radii: {
            0: import("@stitches/react/types/theme").Token<"0", string, "radii", "hms-ui">;
            1: import("@stitches/react/types/theme").Token<"1", string, "radii", "hms-ui">;
            2: import("@stitches/react/types/theme").Token<"2", string, "radii", "hms-ui">;
            3: import("@stitches/react/types/theme").Token<"3", string, "radii", "hms-ui">;
            4: import("@stitches/react/types/theme").Token<"4", string, "radii", "hms-ui">;
            round: import("@stitches/react/types/theme").Token<"round", string, "radii", "hms-ui">;
        };
        space: {
            0: import("@stitches/react/types/theme").Token<"0", string, "space", "hms-ui">;
            xs: import("@stitches/react/types/theme").Token<"xs", string, "space", "hms-ui">;
            sm: import("@stitches/react/types/theme").Token<"sm", string, "space", "hms-ui">;
            md: import("@stitches/react/types/theme").Token<"md", string, "space", "hms-ui">;
            lg: import("@stitches/react/types/theme").Token<"lg", string, "space", "hms-ui">;
            xl: import("@stitches/react/types/theme").Token<"xl", string, "space", "hms-ui">;
            px: import("@stitches/react/types/theme").Token<"px", string, "space", "hms-ui">;
            1: import("@stitches/react/types/theme").Token<"1", string, "space", "hms-ui">;
            2: import("@stitches/react/types/theme").Token<"2", string, "space", "hms-ui">;
            3: import("@stitches/react/types/theme").Token<"3", string, "space", "hms-ui">;
            4: import("@stitches/react/types/theme").Token<"4", string, "space", "hms-ui">;
            5: import("@stitches/react/types/theme").Token<"5", string, "space", "hms-ui">;
            6: import("@stitches/react/types/theme").Token<"6", string, "space", "hms-ui">;
            7: import("@stitches/react/types/theme").Token<"7", string, "space", "hms-ui">;
            8: import("@stitches/react/types/theme").Token<"8", string, "space", "hms-ui">;
            9: import("@stitches/react/types/theme").Token<"9", string, "space", "hms-ui">;
            10: import("@stitches/react/types/theme").Token<"10", string, "space", "hms-ui">;
            11: import("@stitches/react/types/theme").Token<"11", string, "space", "hms-ui">;
            12: import("@stitches/react/types/theme").Token<"12", string, "space", "hms-ui">;
            13: import("@stitches/react/types/theme").Token<"13", string, "space", "hms-ui">;
            14: import("@stitches/react/types/theme").Token<"14", string, "space", "hms-ui">;
            15: import("@stitches/react/types/theme").Token<"15", string, "space", "hms-ui">;
            16: import("@stitches/react/types/theme").Token<"16", string, "space", "hms-ui">;
            17: import("@stitches/react/types/theme").Token<"17", string, "space", "hms-ui">;
            18: import("@stitches/react/types/theme").Token<"18", string, "space", "hms-ui">;
            19: import("@stitches/react/types/theme").Token<"19", string, "space", "hms-ui">;
            20: import("@stitches/react/types/theme").Token<"20", string, "space", "hms-ui">;
            24: import("@stitches/react/types/theme").Token<"24", string, "space", "hms-ui">;
            28: import("@stitches/react/types/theme").Token<"28", string, "space", "hms-ui">;
            32: import("@stitches/react/types/theme").Token<"32", string, "space", "hms-ui">;
            36: import("@stitches/react/types/theme").Token<"36", string, "space", "hms-ui">;
            40: import("@stitches/react/types/theme").Token<"40", string, "space", "hms-ui">;
            44: import("@stitches/react/types/theme").Token<"44", string, "space", "hms-ui">;
            48: import("@stitches/react/types/theme").Token<"48", string, "space", "hms-ui">;
            52: import("@stitches/react/types/theme").Token<"52", string, "space", "hms-ui">;
            56: import("@stitches/react/types/theme").Token<"56", string, "space", "hms-ui">;
            60: import("@stitches/react/types/theme").Token<"60", string, "space", "hms-ui">;
            64: import("@stitches/react/types/theme").Token<"64", string, "space", "hms-ui">;
            72: import("@stitches/react/types/theme").Token<"72", string, "space", "hms-ui">;
            80: import("@stitches/react/types/theme").Token<"80", string, "space", "hms-ui">;
            96: import("@stitches/react/types/theme").Token<"96", string, "space", "hms-ui">;
            100: import("@stitches/react/types/theme").Token<"100", string, "space", "hms-ui">;
        };
        borderWidths: {
            light: import("@stitches/react/types/theme").Token<"light", string, "borderWidths", "hms-ui">;
            normal: import("@stitches/react/types/theme").Token<"normal", string, "borderWidths", "hms-ui">;
            bold: import("@stitches/react/types/theme").Token<"bold", string, "borderWidths", "hms-ui">;
            extrabold: import("@stitches/react/types/theme").Token<"extrabold", string, "borderWidths", "hms-ui">;
            black: import("@stitches/react/types/theme").Token<"black", string, "borderWidths", "hms-ui">;
        };
    };
    aspectRatio: {
        width: number;
        height: number;
    };
    toggleTheme: (_themeToUpdateTo?: ThemeTypes) => void;
};
