{"mappings":"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","sources":["packages/react/switch/src/index.ts","packages/react/switch/src/Switch.tsx"],"sourcesContent":["export {\n  createSwitchScope,\n  //\n  Switch,\n  SwitchThumb,\n  //\n  Root,\n  Thumb,\n} from './Switch';\nexport type { SwitchProps, SwitchThumbProps } from './Switch';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLabelContext } from '@radix-ui/react-label';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Switch\n * -----------------------------------------------------------------------------------------------*/\n\nconst SWITCH_NAME = 'Switch';\n\ntype ScopedProps<P> = P & { __scopeSwitch?: Scope };\nconst [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\n\ntype SwitchContextValue = { checked: boolean; disabled?: boolean };\nconst [SwitchProvider, useSwitchContext] = createSwitchContext<SwitchContextValue>(SWITCH_NAME);\n\ntype SwitchElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SwitchProps extends PrimitiveButtonProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  required?: boolean;\n  onCheckedChange?(checked: boolean): void;\n}\n\nconst Switch = React.forwardRef<SwitchElement, SwitchProps>(\n  (props: ScopedProps<SwitchProps>, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      'aria-labelledby': ariaLabelledby,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = 'on',\n      onCheckedChange,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const labelId = useLabelContext(button);\n    const labelledBy = ariaLabelledby || labelId;\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange,\n    });\n\n    return (\n      <SwitchProvider scope={__scopeSwitch} checked={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"switch\"\n          aria-checked={checked}\n          aria-labelledby={labelledBy}\n          aria-required={required}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...switchProps}\n          ref={composedRefs}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if switch is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect switch updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </SwitchProvider>\n    );\n  }\n);\n\nSwitch.displayName = SWITCH_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SwitchThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SwitchThumb';\n\ntype SwitchThumbElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SwitchThumbProps extends PrimitiveSpanProps {}\n\nconst SwitchThumb = React.forwardRef<SwitchThumbElement, SwitchThumbProps>(\n  (props: ScopedProps<SwitchThumbProps>, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return (\n      <Primitive.span\n        data-state={getState(context.checked)}\n        data-disabled={context.disabled ? '' : undefined}\n        {...thumbProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSwitchThumb.displayName = THUMB_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype InputProps = Radix.ComponentPropsWithoutRef<'input'>;\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked') as PropertyDescriptor;\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n\n  return (\n    <input\n      type=\"checkbox\"\n      aria-hidden\n      defaultChecked={checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        ...controlSize,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  );\n};\n\nfunction getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nconst Root = Switch;\nconst Thumb = SwitchThumb;\n\nexport {\n  createSwitchScope,\n  //\n  Switch,\n  SwitchThumb,\n  //\n  Root,\n  Thumb,\n};\nexport type { SwitchProps, SwitchThumbProps };\n"],"names":["createSwitchScope","Switch","SwitchThumb","Root","Thumb","React","composeEventHandlers","useComposedRefs","createContextScope","useControllableState","usePrevious","useSize","Primitive","useLabelContext","SWITCH_NAME","createSwitchContext","SwitchProvider","useSwitchContext","forwardRef","props","forwardedRef","__scopeSwitch","ariaLabelledby","name","checked","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","switchProps","button","setButton","useState","composedRefs","node","labelId","labelledBy","hasConsumerStoppedPropagationRef","useRef","isFormControl","Boolean","closest","setChecked","prop","defaultProp","onChange","getState","undefined","onClick","event","prevChecked","current","isPropagationStopped","stopPropagation","transform","THUMB_NAME","thumbProps","context","BubbleInput","control","bubbles","inputProps","ref","controlSize","useEffect","input","inputProto","window","HTMLInputElement","prototype","descriptor","Object","getOwnPropertyDescriptor","set","Event","call","dispatchEvent","style","position","pointerEvents","opacity","margin"],"version":3,"file":"index.js.map"}